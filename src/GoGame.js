// Generated by CoffeeScript 1.8.0
var GoGame;

GoGame = (function() {

  /*
  Constants
   */
  GoGame.prototype.BOARD_SIZE = 9;

  GoGame.prototype.PIECE = {
    EMPTY: null,
    BLACK: false,
    WHITE: true
  };


  /*
  Properties
   */

  GoGame.prototype.board = [];

  GoGame.prototype.turn = null;


  /*
  Constructor
   */

  function GoGame() {
    var x, y, _i, _j, _ref, _ref1;
    for (x = _i = 0, _ref = this.BOARD_SIZE; 0 <= _ref ? _i <= _ref : _i >= _ref; x = 0 <= _ref ? ++_i : --_i) {
      this.board.push([]);
      for (y = _j = 0, _ref1 = this.BOARD_SIZE; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
        this.board[x].push(this._createCell(this, x, y));
      }
    }
    this.turn = this.PIECE.BLACK;
  }


  /*
  Game methods
   */

  GoGame.prototype.play = function(x, y) {
    this.board[x][y].value = this.turn;
    return this._alternateTurn();
  };

  GoGame.prototype.pass = function() {
    return this._alternateTurn();
  };


  /*
  Util methods
   */

  GoGame.prototype._createCell = function(game, x, y) {
    return {
      game: game,
      x: x,
      y: y,
      value: this.PIECE.EMPTY,
      _up: null,
      _down: null,
      _left: null,
      _right: null,
      up: function() {
        if (this._up === null && (this.game.board[this.x][this.y - 1] != null)) {
          this._up = this.game.board[this.x][this.y - 1];
        }
        return this._up;
      },
      down: function() {
        if (this._down === null && (this.game.board[this.x][this.y + 1] != null)) {
          this._down = this.game.board[this.x][this.y + 1];
        }
        return this._down;
      },
      left: function() {
        if (this._left === null && (this.game.board[this.x - 1][this.y] != null)) {
          this._left = this.game.board[this.x - 1][this.y];
        }
        return this._left;
      },
      right: function() {
        if (this._right === null && (this.game.board[this.x + 1][this.y] != null)) {
          this._right = this.game.board[this.x + 1][this.y];
        }
        return this._right;
      }
    };
  };

  GoGame.prototype._alternateTurn = function() {
    this.turn = !this.turn;
    return this;
  };

  GoGame.prototype.toString = function() {
    var string, x, y, _i, _j, _ref, _ref1;
    string = '';
    for (y = _i = 0, _ref = this.BOARD_SIZE; 0 <= _ref ? _i <= _ref : _i >= _ref; y = 0 <= _ref ? ++_i : --_i) {
      for (x = _j = 0, _ref1 = this.BOARD_SIZE; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
        string += (function() {
          switch (this.board[x][y].value) {
            case this.PIECE.EMPTY:
              return '-';
            case this.PIECE.BLACK:
              return 'b';
            case this.PIECE.WHITE:
              return 'w';
          }
        }).call(this);
      }
      string += '\n';
    }
    return string;
  };

  return GoGame;

})();
